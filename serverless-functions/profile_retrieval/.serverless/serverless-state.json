{
  "service": {
    "service": "profile-retrieval",
    "serviceObject": {
      "name": "profile-retrieval"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "python3.6",
      "environment": {
        "CIS_DYNAMODB_ARN": "arn:aws:dynamodb:us-west-2:320464205386:table/testing-identity-vault",
        "CIS_ENVIRONMENT": "testing",
        "CIS_ASSUME_ROLE_ARN": "None",
        "CIS_REQUESTS_CACHE_BACKEND": "memory",
        "PERSON_API_AUTH0_DOMAIN": "auth-dev.mozilla.auth0.com",
        "PERSON_API_API_IDENTIFIER": "https://api.sso.allizom.org"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:us-west-2:320464205386:table/testing-identity-vault/*",
            "arn:aws:dynamodb:us-west-2:320464205386:table/testing-identity-vault"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/profile-retrieval-testing-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "testing",
                        "profile-retrieval",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/profile-retrieval-testing-api:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/profile-retrieval-testing-api:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "profile-retrieval",
                    "testing",
                    "us-west-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/profile-retrieval/testing/1547684979703-2019-01-17T00:29:39.703Z/profile-retrieval.zip"
              },
              "FunctionName": "profile-retrieval-testing-api",
              "Handler": "handler.handle",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 15,
              "Description": "serverless-wsgi based endpoint to retrieve profiles aka person-api.",
              "Environment": {
                "Variables": {
                  "CIS_DYNAMODB_ARN": "arn:aws:dynamodb:us-west-2:320464205386:table/testing-identity-vault",
                  "CIS_ENVIRONMENT": "testing",
                  "CIS_ASSUME_ROLE_ARN": "None",
                  "CIS_REQUESTS_CACHE_BACKEND": "memory",
                  "PERSON_API_AUTH0_DOMAIN": "auth-dev.mozilla.auth0.com",
                  "PERSON_API_API_IDENTIFIER": "https://api.sso.allizom.org"
                }
              },
              "Layers": [
                "arn:aws:lambda:us-west-2:320464205386:layer:cis_testing:3"
              ]
            },
            "DependsOn": [
              "ApiLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ApiLambdaVersionNTF8h4QVsQqqomzeoUC4WOJDl74uKNLAkGNoIrzKhA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "+TXZoYJ92pXLD2RM9HGR7j4M5bzT3k7A/k2XRIqb+mE=",
              "Description": "serverless-wsgi based endpoint to retrieve profiles aka person-api."
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "testing-profile-retrieval",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1547684979715": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "testing"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "ApiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionNTF8h4QVsQqqomzeoUC4WOJDl74uKNLAkGNoIrzKhA"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-west-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/testing"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "profileRetrievalStage": "testing",
      "profileRetrievalEnvironment": {
        "CIS_ENVIRONMENT": {
          "production": "production",
          "development": "development",
          "testing": "testing"
        },
        "DYNAMODB_TABLE": {
          "production": "production-identity-vault",
          "development": "development-identity-vault",
          "testing": "testing-identity-vault"
        },
        "IDENTIFIER": {
          "production": "https://api.sso.mozilla.com",
          "development": "https://api.sso.allizom.org",
          "testing": "https://api.sso.allizom.org"
        },
        "CIS_DYNAMODB_ARN": {
          "production": "arn:aws:dynamodb:us-west-2:320464205386:table/production-identity-vault",
          "development": "arn:aws:dynamodb:us-west-2:320464205386:table/development-identity-vault",
          "testing": "arn:aws:dynamodb:us-west-2:320464205386:table/testing-identity-vault"
        },
        "PERSON_API_AUTH0_DOMAIN": {
          "production": "auth.mozilla.auth0.com",
          "development": "auth-dev.mozilla.auth0.com",
          "testing": "auth-dev.mozilla.auth0.com"
        },
        "CIS_JWT_VALIDATION": {
          "production": true,
          "development": true,
          "testing": false
        },
        "DOMAIN_NAME": {
          "production": "person.api.sso.mozilla.com",
          "development": "person.api.dev.sso.allizom.org",
          "testing": "person.api.test.sso.allizom.org"
        }
      },
      "customDomain": {
        "domainName": "person.api.test.sso.allizom.org",
        "basePath": "",
        "stage": "testing",
        "endpointType": "edge",
        "createRoute53Record": true,
        "certificateName": "person.api.test.sso.allizom.org"
      }
    },
    "plugins": [
      "serverless-domain-manager"
    ],
    "pluginsData": {},
    "functions": {
      "api": {
        "handler": "handler.handle",
        "description": "serverless-wsgi based endpoint to retrieve profiles aka person-api.",
        "memorySize": 512,
        "timeout": 15,
        "events": [
          {
            "http": "ANY /"
          },
          {
            "http": "ANY {proxy+}"
          }
        ],
        "layers": [
          "arn:aws:lambda:us-west-2:320464205386:layer:cis_testing:3"
        ],
        "name": "profile-retrieval-testing-api",
        "package": {},
        "memory": 512,
        "runtime": "python3.6",
        "vpc": {}
      }
    },
    "layers": {},
    "artifact": "/Users/akrug/workspace/cis/serverless-functions/profile_retrieval/.serverless/profile-retrieval.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/profile-retrieval/testing/1547684979703-2019-01-17T00:29:39.703Z",
    "artifact": "profile-retrieval.zip"
  }
}